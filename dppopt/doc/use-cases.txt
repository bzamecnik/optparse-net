OptionParser parser = new OptionParser();
parser.ProgramInfo.Name = "foo";
parser.ProgramInfo.Version = "3.14";

OptionValue<string> text = new OptionValue<string>(); 
parser.AddOption(
	new Option(
		new string [] {"-f", "--file", "-F", "--filename"},
		"Input filename",
		new StoreAction<string>(text)		
	) { Required = true, ParametersRequired = true }
	);

OptionValue<bool> verbose = new OptionValue<bool>(false);
parser.AddOption(
	new Option(new string [] {"-v", "--verbose"}, "Enable verbose mode",
		new StoreConstAction<bool>(verbose, true)
	) { ParametersCount = 0 }
	);

parser.AddOption(
	new Option(new string [] {"-q", "--quiet"}, "Disable verbose mode",
		new StoreConstAction<bool>(verbose, false)
	) { ParametersCount = 0 }
	);

OptionValue<int> age = new OptionValue<int>(20); // default value = 20 
parser.AddOption(
	new Option(new string [] {"-t", "--temperature"}, "Temperature",
		new StoreAction<int>(age))
	);

OptionValue<double> temperature = new OptionValue<double>();
parser.AddOption(
	new Option(new string [] {"-t", "--temperature"}, "Temperature",
		new StoreAction<double>(temperature))
		{ ParametersRequired = true }
	);

OptionValue<List<double>> temperatureList = new OptionValue<List<double>>();
parser.AddOption(
	new Option(new string [] {"-t", "--temperature"}, "Temperatures",
		new AppendAction<double>(temperatureList))
		{ ParametersRequired = true }
	);

OptionValue<string> dayInWeekName = new OptionValue<string>();
parser.AddOption(
	new Option(new string [] {"-d", "--day"}, "Day in week",
		new StoreAction<string>(dayInWeekName)
			{ Filter = new ChoiceValueFilter<string>(
				new string [] {"mon", "tue", "wed", "thu", "sat", "sun"}) })
		{ ParametersRequired = true }
	);

OptionValue<int> dayInWeekNumber = new OptionValue<int>(5);
parser.AddOption(
	new Option(new string [] {"-d", "--day"}, "Day in week",
		new StoreAction<int>(dayInWeekNumber)
			{ Filter = new RangeValueFilter<int>() { Min = 1, Max = 7 } }
		)
		{ MetaVariable = "DAY" }
	);

// volby --version, --help a -- by mohly byt zabudovane v parseru

parser.AddOption(
	new Option(new string [] {"-v", "--version"}, "Print program version",
		new SimpleCallbackAction((OptionParser p) => {
			p.PrintVersionInfo(Console.Out);
			p.ExitProgram();
		})
	));

parser.AddOption(
	new Option(new string [] {"-h", "--help"}, "Print help about program options",
		new SimpleCallbackAction((OptionParser p) => {
			p.PrintHelp(Console.Out);
			p.ExitProgram();
		})
	));

parser.AddOption(
	new Option(new string [] {"--"}, "Do not treat the rest of arguments as options",
		new SimpleCallbackAction((OptionParser p) => {
			p.Stop();
		})
	));

parser.AddOption(
	new Option(new string [] {"-m"}, "Do some magic tricks on the parameter",
		new CallbackAction<double>((List<string> value, OptionParser p) => {
			// ...
		})
	));

List<string> remainingArgs;
try {
	remainingArgs = parser.ParseArguments(args);
} catch (ParseException exception) {
	// ...
}

// do anything with the option values
text.Value;
verbose.Value;
quiet.Value;
